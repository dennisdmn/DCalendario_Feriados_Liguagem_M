let
    Fonte = let

    funcao = 
    // ------------------------------------------------------------------- INICIO DA FUNCAO -------------------------------------------------------------------

        (
            DataIni as date,
            DataFim as date
        )=>

        let
            

            GerarAtributos = 

                    (Data as date)=>

                let
                    FeriadosFixos = Table.FromRecords(
                                {
                                    [Tipo = "Confraternização Universal",               AnoMes = "0101"],
                                    [Tipo = "Tiradentes",                               AnoMes = "0421"],
                                    [Tipo = "Dia do Trabalhador",                       AnoMes = "0501"],
                                    [Tipo = "Dia da Pátria (Independência do Brasil)",  AnoMes = "0907"],
                                    [Tipo = "Nossa Senhora Aparecida",                  AnoMes = "1012"],
                                    [Tipo = "Finados",                                  AnoMes = "1102"],
                                    [Tipo = "Proclamação da República",                 AnoMes = "1115"],
                                    [Tipo = "Natal",                                    AnoMes = "1225"]
                                }
                            ),   

                    FeriadosMoveis = FeriadosCristianos(Date.Year(DataIni), Date.Year(DataFim)),

                    ColunasAributos = 

                        Table.FromRecords({
                            
                            [
                                DataSerial              = Number.From(Date.ToText(Data,"yyyyMMdd")),      

                                AnoNum                  = Date.Year(Data),                      
                                AnoPrimeiroDia          = Date.StartOfYear(Data),     
                                        
                                MesNum                  = Date.Month(Data),                     
                                MesPrimeiroDia          = Date.StartOfMonth(Data),             
                                MesUltimoDia            = Date.EndOfMonth(Data),                
                                AnoMesSerial            = Date.ToText(Data, "yyyy-MM"),         
                                MesNumDias              = Date.DaysInMonth(Data),               
                                MesNome                 = Date.MonthName(Data),                 
                                MesNomeReduzido         = Text.Upper(Text.Start(Date.MonthName(Data),3)),    
                                MesDescricao_Ano        = Text.Upper(Text.Start(Date.MonthName(Data),3))&"-"&Text.End(Text.From(Date.Year(Data)),2),
                                
                                TrimestreDoAnoNum       = Date.QuarterOfYear(Data),             
                                TrimestreDataFim        = Date.EndOfQuarter(Data),              
                                AnoTrimNum              = Text.From(Date.Year(Data)) & "-" & Text.From(Date.QuarterOfYear(Data)), 

                                SemanaDoAnoNum          = Date.WeekOfYear(Data),                
                                SemanaDoMesNum          = Date.WeekOfMonth(Data),               
                                SemanaDiaInicio         = Date.StartOfWeek(Data),               
                                SemanaDiaFim            = Date.EndOfWeek(Data),  

                                DiaNum                  = Date.Day(Data),                       
                                DiaAno                  = Date.DayOfYear(Data),                                                       
                                DiaSemanaNum            = Date.DayOfWeek(Data, Day.Sunday) +1,   
                                DiaSemanaNome           = Date.DayOfWeekName(Data),             
                                DiaSemanaNomeReduzido   = Text.Upper(Text.Start(Date.DayOfWeekName(Data),3)),
                                QuinzenaNum             = if Date.Day(Data) <= 15 then 1 else 2,
                                DecendioNum             = 

                                        if Date.Day(Data) <= 10 then 1 
                                        else if Date.Day(Data) <= 20 then 2 
                                        else 3,
                                
                                EhFeriadoFixo           = if List.Contains(FeriadosFixos[AnoMes], Date.ToText(Data,"MMdd")) then "S" else "N",
                                EhFeriadoMovel          = if List.Contains(FeriadosMoveis[Data], Data) then "S" else "N"

                            ]
                        }
                        // não usei typetable aqui porque quando expande, se perde a o tipo
                        )
                in
                    ColunasAributos,

            ListaDatas = List.Dates(DataIni, Duration.Days(DataFim - DataIni) +1, #duration(1,0,0,0)),
            TabelaDatas = Table.FromList(ListaDatas, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
            #"Colunas Renomeadas" = Table.RenameColumns(TabelaDatas,{{"Column1", "Data"}}),
            #"Tipo Alterado" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Data", type date}}),
            #"Personalização Adicionada" = Table.AddColumn(#"Tipo Alterado", "Atributos", each GerarAtributos([Data])),
            #"Atributos Expandido" = Table.ExpandTableColumn(#"Personalização Adicionada", "Atributos", {"DataSerial", "AnoNum", "AnoPrimeiroDia", "MesNum", "MesPrimeiroDia", "MesUltimoDia", "AnoMesSerial", "MesNumDias", "MesNome", "MesNomeReduzido", "MesDescricao_Ano", "TrimestreDoAnoNum", "TrimestreDataFim", "AnoTrimNum", "SemanaDoAnoNum", "SemanaDoMesNum", "SemanaDiaInicio", "SemanaDiaFim", "DiaNum", "DiaAno", "DiaSemanaNum", "DiaSemanaNome", "DiaSemanaNomeReduzido", "QuinzenaNum", "DecendioNum", "EhFeriadoFixo", "EhFeriadoMovel"}, {"DataSerial", "AnoNum", "AnoPrimeiroDia", "MesNum", "MesPrimeiroDia", "MesUltimoDia", "AnoMesSerial", "MesNumDias", "MesNome", "MesNomeReduzido", "MesDescricao_Ano", "TrimestreDoAnoNum", "TrimestreDataFim", "AnoTrimNum", "SemanaDoAnoNum", "SemanaDoMesNum", "SemanaDiaInicio", "SemanaDiaFim", "DiaNum", "DiaAno", "DiaSemanaNum", "DiaSemanaNome", "DiaSemanaNomeReduzido", "QuinzenaNum", "DecendioNum", "EhFeriadoFixo", "EhFeriadoMovel"}),
            TiposAlterados = Table.TransformColumnTypes(#"Atributos Expandido",{{"Data", type date}, {"DataSerial", Int64.Type}, {"AnoNum", Int64.Type}, {"AnoPrimeiroDia", type date}, {"MesNum", Int64.Type}, {"MesPrimeiroDia", type date}, {"MesUltimoDia", type date}, {"AnoMesSerial", type text}, {"MesNumDias", Int64.Type}, {"MesNome", type text}, {"MesNomeReduzido", type text}, {"MesDescricao_Ano", type text}, {"TrimestreDoAnoNum", Int64.Type}, {"TrimestreDataFim", type date}, {"AnoTrimNum", type text}, {"SemanaDoAnoNum", Int64.Type}, {"SemanaDoMesNum", Int64.Type}, {"SemanaDiaInicio", type date}, {"SemanaDiaFim", type date}, {"DiaNum", Int64.Type}, {"DiaAno", Int64.Type}, {"DiaSemanaNum", Int64.Type}, {"DiaSemanaNome", type text}, {"DiaSemanaNomeReduzido", type text}, {"QuinzenaNum", Int64.Type}, {"DecendioNum", Int64.Type}, {"EhFeriadoFixo", Text.Type}, {"EhFeriadoMovel", Text.Type} }),
            DiaUtilNacional = Table.AddColumn(TiposAlterados, "DiaUtilNacional", each if [EhFeriadoFixo] = "N" and [EhFeriadoMovel] = "N" then 1 else 0, Int64.Type)

        in
            DiaUtilNacional

    // ------------------------------------------------------------------- FIM DA FUNCAO -------------------------------------------------------------------

        , metadados = [
            Documentation.Name  = "GeraCalendario",
            Documentation.Description = "
                by Joviano Silveira (www.joviano.com)
                Insira a data inicial, e a data final, e obtenha um calendario com vários atributos já calculados e formatados.
                VOCÊ NECESSITA DAS FORMULAS 'DomingoPascoa' e 'FeriadosCristianos' PARA QUE ESSA FORMULA FUNCIONE.
                ",
            
            Documentation.Examples = {

                // exemplo 01
                [
                    Description = "Feriados dependentes da páscoa nos anos 2019 e 2020",
                    Code = "            
                        GeraCalendario(01/01/2020,31/12/2020)

                    ",
                    Result = "
                        Uma linha por data e uma coluna para cada atributo

                    "
                ]

            }
        ]

in

    Value.ReplaceType(
        funcao,
        Value.ReplaceMetadata(
            Value.Type(funcao),metadados
        )
    )
in
    Fonte
